// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/vehicles_process.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace sonratelematics2 {

  /// <summary>Holder for reflection information generated from Protos/vehicles_process.proto</summary>
  public static partial class VehiclesProcessReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/vehicles_process.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VehiclesProcessReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1Qcm90b3MvdmVoaWNsZXNfcHJvY2Vzcy5wcm90bxIgc29uYXJ0ZWxlbWF0",
            "aWNzLnZlaGljbGVzLnByb2Nlc3MivwEKDlZlaGljbGVQcm9jZXNzEgoKAmlk",
            "GAEgASgEEhIKCnZlaGljbGVfaWQYAiABKAQSDQoFdGl0bGUYAyABKAkSEwoL",
            "ZGVzY3JpcHRpb24YBCABKAkSPwoGc3RhdHVzGAUgASgOMi8uc29uYXJ0ZWxl",
            "bWF0aWNzLnZlaGljbGVzLnByb2Nlc3MuUHJvY2Vzc1N0YXR1cxISCgpjcmVh",
            "dGVkX2F0GAYgASgJEhQKDGxhc3RfdXBkYXRlZBgHIAEoCSKgAQoNUHJvY2Vz",
            "c1VwZGF0ZRIKCgJpZBgBIAEoBBISCgpwcm9jZXNzX2lkGAIgASgEEhMKC2Rl",
            "c2NyaXB0aW9uGAMgASgJEkYKDXVwZGF0ZV9zdGF0dXMYBCABKA4yLy5zb25h",
            "cnRlbGVtYXRpY3MudmVoaWNsZXMucHJvY2Vzcy5Qcm9jZXNzU3RhdHVzEhIK",
            "CmNyZWF0ZWRfYXQYBiABKAkiSwoRQWRkUHJvY2Vzc1JlcXVlc3QSEgoKdmVo",
            "aWNsZV9pZBgBIAEoBBINCgV0aXRsZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgD",
            "IAEoCSJxChpVcGRhdGVQcm9jZXNzU3RhdHVzUmVxdWVzdBISCgpwcm9jZXNz",
            "X2lkGAEgASgEEj8KBnN0YXR1cxgCIAEoDjIvLnNvbmFydGVsZW1hdGljcy52",
            "ZWhpY2xlcy5wcm9jZXNzLlByb2Nlc3NTdGF0dXMiQgoXQWRkUHJvY2Vzc1Vw",
            "ZGF0ZVJlcXVlc3QSEgoKcHJvY2Vzc19pZBgBIAEoBBITCgtkZXNjcmlwdGlv",
            "bhgCIAEoCSIzCh1SZXRyaWV2ZVZlaGljbGVQcm9jZXNzUmVxdWVzdBISCgp2",
            "ZWhpY2xlX2lkGAEgASgEImMKHlJldHJpZXZlVmVoaWNsZVByb2Nlc3NSZXNw",
            "b25zZRJBCgdwcm9jZXNzGAEgAygLMjAuc29uYXJ0ZWxlbWF0aWNzLnZlaGlj",
            "bGVzLnByb2Nlc3MuVmVoaWNsZVByb2Nlc3MiMwodUmV0cmlldmVQcm9jZXNz",
            "VXBkYXRlc1JlcXVlc3QSEgoKcHJvY2Vzc19pZBgBIAEoBCJqCh5SZXRyaWV2",
            "ZVByb2Nlc3NVcGRhdGVzUmVzcG9uc2USSAoPcHJvY2Vzc191cGRhdGVzGAEg",
            "AygLMi8uc29uYXJ0ZWxlbWF0aWNzLnZlaGljbGVzLnByb2Nlc3MuUHJvY2Vz",
            "c1VwZGF0ZSpGCg1Qcm9jZXNzU3RhdHVzEgsKB1BFTkRJTkcQABIMCghBUFBS",
            "T1ZFRBABEg4KCklOX1BST0NFU1MQAhIKCgZGSU5JU0gQAzLJBQoOUHJvY2Vz",
            "c1NlcnZpY2UScwoKQWRkUHJvY2VzcxIzLnNvbmFydGVsZW1hdGljcy52ZWhp",
            "Y2xlcy5wcm9jZXNzLkFkZFByb2Nlc3NSZXF1ZXN0GjAuc29uYXJ0ZWxlbWF0",
            "aWNzLnZlaGljbGVzLnByb2Nlc3MuVmVoaWNsZVByb2Nlc3MShQEKE1VwZGF0",
            "ZVByb2Nlc3NTdGF0dXMSPC5zb25hcnRlbGVtYXRpY3MudmVoaWNsZXMucHJv",
            "Y2Vzcy5VcGRhdGVQcm9jZXNzU3RhdHVzUmVxdWVzdBowLnNvbmFydGVsZW1h",
            "dGljcy52ZWhpY2xlcy5wcm9jZXNzLlZlaGljbGVQcm9jZXNzEn4KEEFkZFBy",
            "b2Nlc3NVcGRhdGUSOS5zb25hcnRlbGVtYXRpY3MudmVoaWNsZXMucHJvY2Vz",
            "cy5BZGRQcm9jZXNzVXBkYXRlUmVxdWVzdBovLnNvbmFydGVsZW1hdGljcy52",
            "ZWhpY2xlcy5wcm9jZXNzLlByb2Nlc3NVcGRhdGUSmwEKFlJldHJpZXZlVmVo",
            "aWNsZVByb2Nlc3MSPy5zb25hcnRlbGVtYXRpY3MudmVoaWNsZXMucHJvY2Vz",
            "cy5SZXRyaWV2ZVZlaGljbGVQcm9jZXNzUmVxdWVzdBpALnNvbmFydGVsZW1h",
            "dGljcy52ZWhpY2xlcy5wcm9jZXNzLlJldHJpZXZlVmVoaWNsZVByb2Nlc3NS",
            "ZXNwb25zZRKbAQoWUmV0cmlldmVQcm9jZXNzVXBkYXRlcxI/LnNvbmFydGVs",
            "ZW1hdGljcy52ZWhpY2xlcy5wcm9jZXNzLlJldHJpZXZlUHJvY2Vzc1VwZGF0",
            "ZXNSZXF1ZXN0GkAuc29uYXJ0ZWxlbWF0aWNzLnZlaGljbGVzLnByb2Nlc3Mu",
            "UmV0cmlldmVQcm9jZXNzVXBkYXRlc1Jlc3BvbnNlQhOqAhBzb25yYXRlbGVt",
            "YXRpY3MyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::sonratelematics2.ProcessStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::sonratelematics2.VehicleProcess), global::sonratelematics2.VehicleProcess.Parser, new[]{ "Id", "VehicleId", "Title", "Description", "Status", "CreatedAt", "LastUpdated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::sonratelematics2.ProcessUpdate), global::sonratelematics2.ProcessUpdate.Parser, new[]{ "Id", "ProcessId", "Description", "UpdateStatus", "CreatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::sonratelematics2.AddProcessRequest), global::sonratelematics2.AddProcessRequest.Parser, new[]{ "VehicleId", "Title", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::sonratelematics2.UpdateProcessStatusRequest), global::sonratelematics2.UpdateProcessStatusRequest.Parser, new[]{ "ProcessId", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::sonratelematics2.AddProcessUpdateRequest), global::sonratelematics2.AddProcessUpdateRequest.Parser, new[]{ "ProcessId", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::sonratelematics2.RetrieveVehicleProcessRequest), global::sonratelematics2.RetrieveVehicleProcessRequest.Parser, new[]{ "VehicleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::sonratelematics2.RetrieveVehicleProcessResponse), global::sonratelematics2.RetrieveVehicleProcessResponse.Parser, new[]{ "Process" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::sonratelematics2.RetrieveProcessUpdatesRequest), global::sonratelematics2.RetrieveProcessUpdatesRequest.Parser, new[]{ "ProcessId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::sonratelematics2.RetrieveProcessUpdatesResponse), global::sonratelematics2.RetrieveProcessUpdatesResponse.Parser, new[]{ "ProcessUpdates" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ProcessStatus {
    [pbr::OriginalName("PENDING")] Pending = 0,
    [pbr::OriginalName("APPROVED")] Approved = 1,
    [pbr::OriginalName("IN_PROCESS")] InProcess = 2,
    [pbr::OriginalName("FINISH")] Finish = 3,
  }

  #endregion

  #region Messages
  public sealed partial class VehicleProcess : pb::IMessage<VehicleProcess>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VehicleProcess> _parser = new pb::MessageParser<VehicleProcess>(() => new VehicleProcess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VehicleProcess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehicleProcess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehicleProcess(VehicleProcess other) : this() {
      id_ = other.id_;
      vehicleId_ = other.vehicleId_;
      title_ = other.title_;
      description_ = other.description_;
      status_ = other.status_;
      createdAt_ = other.createdAt_;
      lastUpdated_ = other.lastUpdated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehicleProcess Clone() {
      return new VehicleProcess(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 2;
    private ulong vehicleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::sonratelematics2.ProcessStatus status_ = global::sonratelematics2.ProcessStatus.Pending;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::sonratelematics2.ProcessStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 6;
    private string createdAt_ = "";
    /// <summary>
    /// Fecha en formato UTC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_updated" field.</summary>
    public const int LastUpdatedFieldNumber = 7;
    private string lastUpdated_ = "";
    /// <summary>
    /// Fecha en formato UTC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastUpdated {
      get { return lastUpdated_; }
      set {
        lastUpdated_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VehicleProcess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VehicleProcess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (VehicleId != other.VehicleId) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      if (Status != other.Status) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (LastUpdated != other.LastUpdated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (VehicleId != 0UL) hash ^= VehicleId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Status != global::sonratelematics2.ProcessStatus.Pending) hash ^= Status.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (LastUpdated.Length != 0) hash ^= LastUpdated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (VehicleId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(VehicleId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Status != global::sonratelematics2.ProcessStatus.Pending) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedAt);
      }
      if (LastUpdated.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LastUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (VehicleId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(VehicleId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Status != global::sonratelematics2.ProcessStatus.Pending) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedAt);
      }
      if (LastUpdated.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LastUpdated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (VehicleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VehicleId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Status != global::sonratelematics2.ProcessStatus.Pending) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (CreatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (LastUpdated.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastUpdated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VehicleProcess other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.VehicleId != 0UL) {
        VehicleId = other.VehicleId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Status != global::sonratelematics2.ProcessStatus.Pending) {
        Status = other.Status;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.LastUpdated.Length != 0) {
        LastUpdated = other.LastUpdated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            VehicleId = input.ReadUInt64();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Status = (global::sonratelematics2.ProcessStatus) input.ReadEnum();
            break;
          }
          case 50: {
            CreatedAt = input.ReadString();
            break;
          }
          case 58: {
            LastUpdated = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            VehicleId = input.ReadUInt64();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Status = (global::sonratelematics2.ProcessStatus) input.ReadEnum();
            break;
          }
          case 50: {
            CreatedAt = input.ReadString();
            break;
          }
          case 58: {
            LastUpdated = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProcessUpdate : pb::IMessage<ProcessUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProcessUpdate> _parser = new pb::MessageParser<ProcessUpdate>(() => new ProcessUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessUpdate(ProcessUpdate other) : this() {
      id_ = other.id_;
      processId_ = other.processId_;
      description_ = other.description_;
      updateStatus_ = other.updateStatus_;
      createdAt_ = other.createdAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessUpdate Clone() {
      return new ProcessUpdate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "process_id" field.</summary>
    public const int ProcessIdFieldNumber = 2;
    private ulong processId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ProcessId {
      get { return processId_; }
      set {
        processId_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_status" field.</summary>
    public const int UpdateStatusFieldNumber = 4;
    private global::sonratelematics2.ProcessStatus updateStatus_ = global::sonratelematics2.ProcessStatus.Pending;
    /// <summary>
    /// El estado del proceso en el momento en que se almacena el comentario
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::sonratelematics2.ProcessStatus UpdateStatus {
      get { return updateStatus_; }
      set {
        updateStatus_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 6;
    private string createdAt_ = "";
    /// <summary>
    /// Fecha en formato UTC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ProcessId != other.ProcessId) return false;
      if (Description != other.Description) return false;
      if (UpdateStatus != other.UpdateStatus) return false;
      if (CreatedAt != other.CreatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (ProcessId != 0UL) hash ^= ProcessId.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (UpdateStatus != global::sonratelematics2.ProcessStatus.Pending) hash ^= UpdateStatus.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (ProcessId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ProcessId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (UpdateStatus != global::sonratelematics2.ProcessStatus.Pending) {
        output.WriteRawTag(32);
        output.WriteEnum((int) UpdateStatus);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (ProcessId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ProcessId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (UpdateStatus != global::sonratelematics2.ProcessStatus.Pending) {
        output.WriteRawTag(32);
        output.WriteEnum((int) UpdateStatus);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (ProcessId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ProcessId);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (UpdateStatus != global::sonratelematics2.ProcessStatus.Pending) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UpdateStatus);
      }
      if (CreatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessUpdate other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.ProcessId != 0UL) {
        ProcessId = other.ProcessId;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.UpdateStatus != global::sonratelematics2.ProcessStatus.Pending) {
        UpdateStatus = other.UpdateStatus;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            ProcessId = input.ReadUInt64();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            UpdateStatus = (global::sonratelematics2.ProcessStatus) input.ReadEnum();
            break;
          }
          case 50: {
            CreatedAt = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            ProcessId = input.ReadUInt64();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            UpdateStatus = (global::sonratelematics2.ProcessStatus) input.ReadEnum();
            break;
          }
          case 50: {
            CreatedAt = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddProcessRequest : pb::IMessage<AddProcessRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddProcessRequest> _parser = new pb::MessageParser<AddProcessRequest>(() => new AddProcessRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddProcessRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddProcessRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddProcessRequest(AddProcessRequest other) : this() {
      vehicleId_ = other.vehicleId_;
      title_ = other.title_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddProcessRequest Clone() {
      return new AddProcessRequest(this);
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 1;
    private ulong vehicleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddProcessRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddProcessRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VehicleId != other.VehicleId) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VehicleId != 0UL) hash ^= VehicleId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VehicleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(VehicleId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VehicleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(VehicleId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VehicleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VehicleId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddProcessRequest other) {
      if (other == null) {
        return;
      }
      if (other.VehicleId != 0UL) {
        VehicleId = other.VehicleId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VehicleId = input.ReadUInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VehicleId = input.ReadUInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpdateProcessStatusRequest : pb::IMessage<UpdateProcessStatusRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateProcessStatusRequest> _parser = new pb::MessageParser<UpdateProcessStatusRequest>(() => new UpdateProcessStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateProcessStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProcessStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProcessStatusRequest(UpdateProcessStatusRequest other) : this() {
      processId_ = other.processId_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProcessStatusRequest Clone() {
      return new UpdateProcessStatusRequest(this);
    }

    /// <summary>Field number for the "process_id" field.</summary>
    public const int ProcessIdFieldNumber = 1;
    private ulong processId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ProcessId {
      get { return processId_; }
      set {
        processId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::sonratelematics2.ProcessStatus status_ = global::sonratelematics2.ProcessStatus.Pending;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::sonratelematics2.ProcessStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateProcessStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateProcessStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessId != other.ProcessId) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessId != 0UL) hash ^= ProcessId.GetHashCode();
      if (Status != global::sonratelematics2.ProcessStatus.Pending) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProcessId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProcessId);
      }
      if (Status != global::sonratelematics2.ProcessStatus.Pending) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProcessId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProcessId);
      }
      if (Status != global::sonratelematics2.ProcessStatus.Pending) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ProcessId);
      }
      if (Status != global::sonratelematics2.ProcessStatus.Pending) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateProcessStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProcessId != 0UL) {
        ProcessId = other.ProcessId;
      }
      if (other.Status != global::sonratelematics2.ProcessStatus.Pending) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProcessId = input.ReadUInt64();
            break;
          }
          case 16: {
            Status = (global::sonratelematics2.ProcessStatus) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProcessId = input.ReadUInt64();
            break;
          }
          case 16: {
            Status = (global::sonratelematics2.ProcessStatus) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddProcessUpdateRequest : pb::IMessage<AddProcessUpdateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddProcessUpdateRequest> _parser = new pb::MessageParser<AddProcessUpdateRequest>(() => new AddProcessUpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddProcessUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddProcessUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddProcessUpdateRequest(AddProcessUpdateRequest other) : this() {
      processId_ = other.processId_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddProcessUpdateRequest Clone() {
      return new AddProcessUpdateRequest(this);
    }

    /// <summary>Field number for the "process_id" field.</summary>
    public const int ProcessIdFieldNumber = 1;
    private ulong processId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ProcessId {
      get { return processId_; }
      set {
        processId_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddProcessUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddProcessUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessId != other.ProcessId) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessId != 0UL) hash ^= ProcessId.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProcessId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProcessId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProcessId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProcessId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ProcessId);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddProcessUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProcessId != 0UL) {
        ProcessId = other.ProcessId;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProcessId = input.ReadUInt64();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProcessId = input.ReadUInt64();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RetrieveVehicleProcessRequest : pb::IMessage<RetrieveVehicleProcessRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RetrieveVehicleProcessRequest> _parser = new pb::MessageParser<RetrieveVehicleProcessRequest>(() => new RetrieveVehicleProcessRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RetrieveVehicleProcessRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveVehicleProcessRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveVehicleProcessRequest(RetrieveVehicleProcessRequest other) : this() {
      vehicleId_ = other.vehicleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveVehicleProcessRequest Clone() {
      return new RetrieveVehicleProcessRequest(this);
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 1;
    private ulong vehicleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RetrieveVehicleProcessRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RetrieveVehicleProcessRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VehicleId != other.VehicleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VehicleId != 0UL) hash ^= VehicleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VehicleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(VehicleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VehicleId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(VehicleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VehicleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VehicleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RetrieveVehicleProcessRequest other) {
      if (other == null) {
        return;
      }
      if (other.VehicleId != 0UL) {
        VehicleId = other.VehicleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VehicleId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VehicleId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RetrieveVehicleProcessResponse : pb::IMessage<RetrieveVehicleProcessResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RetrieveVehicleProcessResponse> _parser = new pb::MessageParser<RetrieveVehicleProcessResponse>(() => new RetrieveVehicleProcessResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RetrieveVehicleProcessResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveVehicleProcessResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveVehicleProcessResponse(RetrieveVehicleProcessResponse other) : this() {
      process_ = other.process_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveVehicleProcessResponse Clone() {
      return new RetrieveVehicleProcessResponse(this);
    }

    /// <summary>Field number for the "process" field.</summary>
    public const int ProcessFieldNumber = 1;
    private static readonly pb::FieldCodec<global::sonratelematics2.VehicleProcess> _repeated_process_codec
        = pb::FieldCodec.ForMessage(10, global::sonratelematics2.VehicleProcess.Parser);
    private readonly pbc::RepeatedField<global::sonratelematics2.VehicleProcess> process_ = new pbc::RepeatedField<global::sonratelematics2.VehicleProcess>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::sonratelematics2.VehicleProcess> Process {
      get { return process_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RetrieveVehicleProcessResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RetrieveVehicleProcessResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!process_.Equals(other.process_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= process_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      process_.WriteTo(output, _repeated_process_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      process_.WriteTo(ref output, _repeated_process_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += process_.CalculateSize(_repeated_process_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RetrieveVehicleProcessResponse other) {
      if (other == null) {
        return;
      }
      process_.Add(other.process_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            process_.AddEntriesFrom(input, _repeated_process_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            process_.AddEntriesFrom(ref input, _repeated_process_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RetrieveProcessUpdatesRequest : pb::IMessage<RetrieveProcessUpdatesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RetrieveProcessUpdatesRequest> _parser = new pb::MessageParser<RetrieveProcessUpdatesRequest>(() => new RetrieveProcessUpdatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RetrieveProcessUpdatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveProcessUpdatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveProcessUpdatesRequest(RetrieveProcessUpdatesRequest other) : this() {
      processId_ = other.processId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveProcessUpdatesRequest Clone() {
      return new RetrieveProcessUpdatesRequest(this);
    }

    /// <summary>Field number for the "process_id" field.</summary>
    public const int ProcessIdFieldNumber = 1;
    private ulong processId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ProcessId {
      get { return processId_; }
      set {
        processId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RetrieveProcessUpdatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RetrieveProcessUpdatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessId != other.ProcessId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessId != 0UL) hash ^= ProcessId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProcessId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProcessId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProcessId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProcessId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ProcessId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RetrieveProcessUpdatesRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProcessId != 0UL) {
        ProcessId = other.ProcessId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProcessId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProcessId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RetrieveProcessUpdatesResponse : pb::IMessage<RetrieveProcessUpdatesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RetrieveProcessUpdatesResponse> _parser = new pb::MessageParser<RetrieveProcessUpdatesResponse>(() => new RetrieveProcessUpdatesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RetrieveProcessUpdatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveProcessUpdatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveProcessUpdatesResponse(RetrieveProcessUpdatesResponse other) : this() {
      processUpdates_ = other.processUpdates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveProcessUpdatesResponse Clone() {
      return new RetrieveProcessUpdatesResponse(this);
    }

    /// <summary>Field number for the "process_updates" field.</summary>
    public const int ProcessUpdatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::sonratelematics2.ProcessUpdate> _repeated_processUpdates_codec
        = pb::FieldCodec.ForMessage(10, global::sonratelematics2.ProcessUpdate.Parser);
    private readonly pbc::RepeatedField<global::sonratelematics2.ProcessUpdate> processUpdates_ = new pbc::RepeatedField<global::sonratelematics2.ProcessUpdate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::sonratelematics2.ProcessUpdate> ProcessUpdates {
      get { return processUpdates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RetrieveProcessUpdatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RetrieveProcessUpdatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!processUpdates_.Equals(other.processUpdates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= processUpdates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      processUpdates_.WriteTo(output, _repeated_processUpdates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      processUpdates_.WriteTo(ref output, _repeated_processUpdates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += processUpdates_.CalculateSize(_repeated_processUpdates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RetrieveProcessUpdatesResponse other) {
      if (other == null) {
        return;
      }
      processUpdates_.Add(other.processUpdates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            processUpdates_.AddEntriesFrom(input, _repeated_processUpdates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            processUpdates_.AddEntriesFrom(ref input, _repeated_processUpdates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
