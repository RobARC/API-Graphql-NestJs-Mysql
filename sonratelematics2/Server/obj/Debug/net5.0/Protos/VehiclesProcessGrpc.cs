// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/vehicles_process.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace sonratelematics2 {
  public static partial class ProcessService
  {
    static readonly string __ServiceName = "sonartelematics.vehicles.process.ProcessService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::sonratelematics2.AddProcessRequest> __Marshaller_sonartelematics_vehicles_process_AddProcessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sonratelematics2.AddProcessRequest.Parser));
    static readonly grpc::Marshaller<global::sonratelematics2.VehicleProcess> __Marshaller_sonartelematics_vehicles_process_VehicleProcess = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sonratelematics2.VehicleProcess.Parser));
    static readonly grpc::Marshaller<global::sonratelematics2.UpdateProcessStatusRequest> __Marshaller_sonartelematics_vehicles_process_UpdateProcessStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sonratelematics2.UpdateProcessStatusRequest.Parser));
    static readonly grpc::Marshaller<global::sonratelematics2.AddProcessUpdateRequest> __Marshaller_sonartelematics_vehicles_process_AddProcessUpdateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sonratelematics2.AddProcessUpdateRequest.Parser));
    static readonly grpc::Marshaller<global::sonratelematics2.ProcessUpdate> __Marshaller_sonartelematics_vehicles_process_ProcessUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sonratelematics2.ProcessUpdate.Parser));
    static readonly grpc::Marshaller<global::sonratelematics2.RetrieveVehicleProcessRequest> __Marshaller_sonartelematics_vehicles_process_RetrieveVehicleProcessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sonratelematics2.RetrieveVehicleProcessRequest.Parser));
    static readonly grpc::Marshaller<global::sonratelematics2.RetrieveVehicleProcessResponse> __Marshaller_sonartelematics_vehicles_process_RetrieveVehicleProcessResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sonratelematics2.RetrieveVehicleProcessResponse.Parser));
    static readonly grpc::Marshaller<global::sonratelematics2.RetrieveProcessUpdatesRequest> __Marshaller_sonartelematics_vehicles_process_RetrieveProcessUpdatesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sonratelematics2.RetrieveProcessUpdatesRequest.Parser));
    static readonly grpc::Marshaller<global::sonratelematics2.RetrieveProcessUpdatesResponse> __Marshaller_sonartelematics_vehicles_process_RetrieveProcessUpdatesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sonratelematics2.RetrieveProcessUpdatesResponse.Parser));

    static readonly grpc::Method<global::sonratelematics2.AddProcessRequest, global::sonratelematics2.VehicleProcess> __Method_AddProcess = new grpc::Method<global::sonratelematics2.AddProcessRequest, global::sonratelematics2.VehicleProcess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProcess",
        __Marshaller_sonartelematics_vehicles_process_AddProcessRequest,
        __Marshaller_sonartelematics_vehicles_process_VehicleProcess);

    static readonly grpc::Method<global::sonratelematics2.UpdateProcessStatusRequest, global::sonratelematics2.VehicleProcess> __Method_UpdateProcessStatus = new grpc::Method<global::sonratelematics2.UpdateProcessStatusRequest, global::sonratelematics2.VehicleProcess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProcessStatus",
        __Marshaller_sonartelematics_vehicles_process_UpdateProcessStatusRequest,
        __Marshaller_sonartelematics_vehicles_process_VehicleProcess);

    static readonly grpc::Method<global::sonratelematics2.AddProcessUpdateRequest, global::sonratelematics2.ProcessUpdate> __Method_AddProcessUpdate = new grpc::Method<global::sonratelematics2.AddProcessUpdateRequest, global::sonratelematics2.ProcessUpdate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProcessUpdate",
        __Marshaller_sonartelematics_vehicles_process_AddProcessUpdateRequest,
        __Marshaller_sonartelematics_vehicles_process_ProcessUpdate);

    static readonly grpc::Method<global::sonratelematics2.RetrieveVehicleProcessRequest, global::sonratelematics2.RetrieveVehicleProcessResponse> __Method_RetrieveVehicleProcess = new grpc::Method<global::sonratelematics2.RetrieveVehicleProcessRequest, global::sonratelematics2.RetrieveVehicleProcessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetrieveVehicleProcess",
        __Marshaller_sonartelematics_vehicles_process_RetrieveVehicleProcessRequest,
        __Marshaller_sonartelematics_vehicles_process_RetrieveVehicleProcessResponse);

    static readonly grpc::Method<global::sonratelematics2.RetrieveProcessUpdatesRequest, global::sonratelematics2.RetrieveProcessUpdatesResponse> __Method_RetrieveProcessUpdates = new grpc::Method<global::sonratelematics2.RetrieveProcessUpdatesRequest, global::sonratelematics2.RetrieveProcessUpdatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetrieveProcessUpdates",
        __Marshaller_sonartelematics_vehicles_process_RetrieveProcessUpdatesRequest,
        __Marshaller_sonartelematics_vehicles_process_RetrieveProcessUpdatesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::sonratelematics2.VehiclesProcessReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ProcessService</summary>
    [grpc::BindServiceMethod(typeof(ProcessService), "BindService")]
    public abstract partial class ProcessServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::sonratelematics2.VehicleProcess> AddProcess(global::sonratelematics2.AddProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::sonratelematics2.VehicleProcess> UpdateProcessStatus(global::sonratelematics2.UpdateProcessStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::sonratelematics2.ProcessUpdate> AddProcessUpdate(global::sonratelematics2.AddProcessUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::sonratelematics2.RetrieveVehicleProcessResponse> RetrieveVehicleProcess(global::sonratelematics2.RetrieveVehicleProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::sonratelematics2.RetrieveProcessUpdatesResponse> RetrieveProcessUpdates(global::sonratelematics2.RetrieveProcessUpdatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ProcessServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddProcess, serviceImpl.AddProcess)
          .AddMethod(__Method_UpdateProcessStatus, serviceImpl.UpdateProcessStatus)
          .AddMethod(__Method_AddProcessUpdate, serviceImpl.AddProcessUpdate)
          .AddMethod(__Method_RetrieveVehicleProcess, serviceImpl.RetrieveVehicleProcess)
          .AddMethod(__Method_RetrieveProcessUpdates, serviceImpl.RetrieveProcessUpdates).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProcessServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sonratelematics2.AddProcessRequest, global::sonratelematics2.VehicleProcess>(serviceImpl.AddProcess));
      serviceBinder.AddMethod(__Method_UpdateProcessStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sonratelematics2.UpdateProcessStatusRequest, global::sonratelematics2.VehicleProcess>(serviceImpl.UpdateProcessStatus));
      serviceBinder.AddMethod(__Method_AddProcessUpdate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sonratelematics2.AddProcessUpdateRequest, global::sonratelematics2.ProcessUpdate>(serviceImpl.AddProcessUpdate));
      serviceBinder.AddMethod(__Method_RetrieveVehicleProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sonratelematics2.RetrieveVehicleProcessRequest, global::sonratelematics2.RetrieveVehicleProcessResponse>(serviceImpl.RetrieveVehicleProcess));
      serviceBinder.AddMethod(__Method_RetrieveProcessUpdates, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sonratelematics2.RetrieveProcessUpdatesRequest, global::sonratelematics2.RetrieveProcessUpdatesResponse>(serviceImpl.RetrieveProcessUpdates));
    }

  }
}
#endregion
